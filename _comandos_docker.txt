-- Acceder a container como root

	docker exec -u 0 -it mycontainer bash

-- Proxy para debian

	echo "export http_proxy=http://panda:panda@192.6.2.109:81" >> /etc/profile.d/proxy.sh
	echo "export https_proxy=http://panda:panda@192.6.2.109:81" >> /etc/profile.d/proxy.sh
	echo "Acquire::http::Proxy \"http://panda:panda@192.6.2.109:81\";" >> /etc/apt/apt.conf.d/99HttpProxy
	echo "Acquire::https::Proxy \"http://panda:panda@192.6.2.109:81\";" >> /etc/apt/apt.conf.d/99HttpProxy
	echo "http_proxy=http://panda:panda@192.6.2.109:81" >> /etc/wgetrc
	echo "https_proxy=http://panda:panda@192.6.2.109:81" >> /etc/wgetrc
	
	root@client:~# vi /etc/profile
	# add follows to the end (set proxy settings to the environment variables)
	MY_PROXY_URL="http://panda:panda@192.6.2.109:81/"
	HTTP_PROXY=$MY_PROXY_URL
	HTTPS_PROXY=$MY_PROXY_URL
	FTP_PROXY=$MY_PROXY_URL
	http_proxy=$MY_PROXY_URL
	https_proxy=$MY_PROXY_URL
	ftp_proxy=$MY_PROXY_URL
	export HTTP_PROXY HTTPS_PROXY FTP_PROXY http_proxy https_proxy ftp_proxy

	root@client:~# source /etc/profile

	root@client:~# vi /etc/apt/apt.conf
	# create new
	Acquire::http::proxy "http://panda:panda@192.6.2.109:81/";
	Acquire::https::proxy "http://panda:panda@192.6.2.109:81/";
	Acquire::ftp::proxy "http://panda:panda@192.6.2.109:81/";

	root@client:~# vi /etc/wgetrc
	# add to the end
	http_proxy = http://panda:panda@192.6.2.109:81/
	https_proxy = http://panda:panda@192.6.2.109:81/
	ftp_proxy = http://panda:panda@192.6.2.109:81/	

inspeccionar objetos docker:
	docker inspect <OBJECT-NAME>
	
ejecutar comando en contenedor:
	docker exec <CONTAINER-NAME> <COMMAND>
	
ver logs de contenedor:
	 docker logs -f <CONTAINER-NAME>

listado de imagenes:
	docker images

listado de contenedores (-a=todos):
	docker ps -a
	
ejecutar imagen:
	docker run <IMG-NAME>
	
construir imagen desde Dockerfile (-t=nombre imagen, .=ruta del Dockerfile):
	docker build -t <IMG-NAME> .

etiquetar imagen para subir a dockerhub:
	docker tag <TAG-NAME>
	
identificarse en dockerhub:
	docker login
	
subir imagen a dockerub:
	docker push <IMG-NAME>
	
borrar imagen local (dos opciones):
	docker rmi -f <IMG-NAME>
	docker image rm -f <IMG-NAME>
	
listado de redes docker:
	docker network ls
	
inspeccionar red:
	docker network inspect <NETWORK-NAME>
	
conectar contenedor a una red:
	docker network connect <NETWORK-NAME> <CONTAINER-NAME>
	
desconectar contenedor de una red:
	docker network disconnect <NETWORK-NAME> <CONTAINER-NAME>
	
crear nueva red (-d=especificar driver).
	docker network create -d bridge <NETWORK-NAME>

inicializar swarm:
	docker swarm init --advertise-addr <MANAGER-IP>
	
abandonar swarm:
	docker swarm leave
	
listado de nodos del swarm:
	docker node ls

desplegar stack:
	docker stack deploy --compose-file <YML-FILE> <APP-NAME>
	
listado de stacks:
	docker stack ls
	
borra stack:
	docker stack rm <APP-NAME>
	
listado de servicios de un stack:
	docker stack services <APP-NAME>
	
borrar stack:
	docker stack rm <APP-NAME>